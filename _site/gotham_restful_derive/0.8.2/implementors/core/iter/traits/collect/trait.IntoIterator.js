(function() {var implementors = {
"proc_macro2":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>"]],
"regex":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"regex/struct.SetMatches.html\" title=\"struct regex::SetMatches\">SetMatches</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"regex/bytes/struct.SetMatches.html\" title=\"struct regex::bytes::SetMatches\">SetMatches</a>"]],
"regex_syntax":[["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.68.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"enum\" href=\"regex_syntax/utf8/enum.Utf8Sequence.html\" title=\"enum regex_syntax::utf8::Utf8Sequence\">Utf8Sequence</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()