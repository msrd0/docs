searchState.loadedDescShard("pulldown_cmark_to_cmark", 0, "Similar to Pulldown-Cmark-Alignment, but with required …\nThea mount of code-block tokens one needs to produce a …\nConfiguration for the <code>cmark_with_options()</code> and …\nThe state of the <code>cmark_resume()</code> and …\nReturn the …\nAs <code>cmark_with_options()</code>, but with default <code>Options</code>.\nAs <code>cmark_resume_with_options()</code>, but with default <code>Options</code>.\nSerialize a stream of pulldown-cmark-Events into a …\nAs <code>cmark_resume_with_options()</code>, but with the <code>State</code> …\nToken count for fenced code block. An appropriate value of …\nKeeps track of the last seen heading’s id, classes, and …\nKeeps track of the last seen shortcut/link\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCurrently open images\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs set while we are handling text in a code block\nTrue if the last event was text and the text does not have …\nCurrently open links\nThe lists and their types for which we have seen a …\nThe amount of newlines placed after TOML or YAML metadata …\nThe amount of newlines to insert after <code>Event::Start(...)</code>\nThe computed padding and prefix to print after each …\nA list of shortcuts seen so far for later emission\nKeeps the current table alignments, if we are currently …\nKeeps the current table headers, if we are currently …\nThe last seen text when serializing a header")