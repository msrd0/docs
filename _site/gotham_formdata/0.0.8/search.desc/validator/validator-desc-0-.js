searchState.loadedDescShard("validator", 0, "Example:\nThis is the original trait that was implemented by …\nThis trait will be implemented by deriving <code>Validate</code>. This …\nValidates whether the given string is an email based on …\nValidates the length of the value given. If the validator …\nValidates that the given <code>value</code> is inside the defined range.\nValidates whether the given Option is Some\nValidates whether the string given is a url\nReturns a map of field-level validation errors found for …\nReturns a mutable map of field-level validation errors …\nReturns a map of only field-level validation errors found …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a boolean indicating whether a validation result …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the struct, returning the validation errors found\nReturns the combined outcome of a struct’s validation …\nReturns the combined outcome of a struct’s validation …\nValidates whether the given string is an IP\nValidates whether the given string is an IP V4\nValidates whether the given string is an IP V6\nValidates that the 2 given fields match. Both fields are …\nAdds a custom message to a <code>ValidationError</code> that will be …")