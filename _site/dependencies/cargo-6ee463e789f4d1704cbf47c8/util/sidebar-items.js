initSidebarItems({"enum":[["ProgressStyle",""]],"fn":[["add_path_args",""],["elapsed",""],["existing_vcs_repo",""],["indented_lines",""],["is_ci","Whether or not this running in a Continuous Integration environment."],["path_args","The path that we pass to rustc is actually fairly important because it will show up in error messages (important for readability), debug information (important for caching), etc. As a result we need to be pretty careful how we actually invoke rustc."],["print_available_benches",""],["print_available_binaries",""],["print_available_examples",""],["print_available_packages",""],["print_available_tests",""],["read2",""]],"mod":[["command_prelude",""],["config","Cargo’s config system."],["cpu",""],["diagnostic_server","A small TCP server to handle collection of diagnostics information in a cross-platform way for the `cargo fix` command."],["errors",""],["graph",""],["hex",""],["important_paths",""],["interning",""],["into_url",""],["job","Job management (mostly for windows)"],["lev_distance",""],["machine_message",""],["network",""],["paths",""],["process_builder",""],["profile",""],["restricted_names","Helpers for validating and checking names like package and crate names."],["rustc",""],["to_semver",""],["toml",""]],"struct":[["CanonicalUrl","A newtype wrapper around `Url` which represents a “canonical” version of an original URL."],["DependencyQueue",""],["FileLock",""],["Filesystem","A “filesystem” is intended to be a globally shared, hence locked, resource in Cargo."],["FossilRepo",""],["GitRepo",""],["HgRepo",""],["LockServer",""],["LockServerClient",""],["LockServerStarted",""],["PijulRepo",""],["Progress",""],["Queue","A simple, threadsafe, queue of items of type `T`"],["Sha256",""],["StableHasher",""]],"trait":[["IntoUrlWithBase","A type that can be interpreted as a relative Url and converted to a Url."]]});