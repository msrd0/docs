initSidebarItems({"enum":[["MaybeWorkspace","Enum that allows for the parsing of `field.workspace = true` in a Cargo.toml"],["ProfilePackageSpec",""],["StringOrBool",""],["TomlDependency",""],["U32OrBool",""],["VecStringOrBool",""]],"fn":[["parse","Attempts to parse a string into a [`toml::Value`]. This is not specific to any particular kind of TOML file."],["parse_document",""],["read_manifest","Loads a `Cargo.toml` from a file on disk."],["read_manifest_from_str","Parse an already-loaded `Cargo.toml` as a Cargo manifest."],["readme_for_project","Returns the name of the README file for a `TomlProject`."]],"struct":[["DetailedTomlDependency",""],["InheritableFields","A group of fields that are inheritable by members of the workspace"],["IntermediateDependency",""],["StringOrVec","A StringOrVec can be parsed from either a TOML string or array, but is always stored as a vector."],["TomlDeError","Errors that can occur when deserializing a type."],["TomlEditError","Type representing a TOML parse error"],["TomlManifest","This type is used to deserialize `Cargo.toml` files."],["TomlOptLevel",""],["TomlProfile",""],["TomlProfiles",""],["TomlProject","Represents the `package`/`project` sections of a `Cargo.toml`."],["TomlWorkspace",""],["TomlWorkspaceDependency",""],["TomlWorkspaceField",""]],"trait":[["ResolveToPath",""]]});