window.SIDEBAR_ITEMS = {"derive":[["DieselNumericOps","Implement numeric operators for the current query node"],["SqlType","Implement necessary traits for adding a new sql type"]],"mod":[["is_nullable","Possible values for `SqlType::IsNullable`"],["ops","Represents the output of numeric operators in SQL"]],"struct":[["BigInt","The big integer SQL type."],["Binary","The binary SQL type."],["Bool","The boolean SQL type."],["Date","The date SQL type."],["Double","The double precision float SQL type."],["Float","The float SQL type."],["Integer","The integer SQL type."],["Interval","The interval SQL type."],["Json","The JSON SQL type.  This type can only be used with `feature = \"serde_json\"`"],["Nullable","The nullable SQL type."],["Numeric","The arbitrary precision numeric SQL type."],["SmallInt","The small integer SQL type."],["Text","The text SQL type."],["Time","The time SQL type."],["Timestamp","The timestamp SQL type."],["TinyInt","The tiny integer SQL type."],["Untyped","Query nodes with this expression type do not have a statically at compile time known expression type."]],"trait":[["AllAreNullable","Are both values of `IsNull` are nullable?"],["BoolOrNullableBool","A marker trait for accepting expressions of the type `Bool` and `Nullable<Bool>` in the same place"],["Foldable","Represents SQL types which can be used with `SUM` and `AVG`"],["HasSqlType","Indicates that a SQL type exists for a backend."],["IntoNotNullable","Converts a type which may or may not be nullable into its not nullable representation."],["IntoNullable","Converts a type which may or may not be nullable into its nullable representation."],["MaybeNullableType","A type level constructor for maybe nullable types"],["OneIsNullable","Is one value of `IsNull` nullable?"],["SingleValue","A marker trait indicating that a SQL type represents a single value, as opposed to a list of values."],["SqlOrd","Marker trait for types which can be used with `MAX` and `MIN`"],["SqlType","A marker trait for SQL types"],["TypeMetadata","Information about how a backend stores metadata about given SQL types"]],"type":[["Decimal","Alias for `Numeric`"],["VarChar","The SQL `VARCHAR` type"]]};