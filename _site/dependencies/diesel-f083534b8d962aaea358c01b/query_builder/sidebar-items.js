window.SIDEBAR_ITEMS = {"derive":[["AsChangeset","Implements `AsChangeset`"],["QueryId","Implements `QueryId`"]],"fn":[["debug_query","Takes a query `QueryFragment` expression as an argument and returns a type that implements `fmt::Display` and `fmt::Debug` to show the query."]],"mod":[["bind_collector","Types related to managing bind parameters during query construction."]],"struct":[["AstPass","The primary type used when walking a Diesel AST during query execution."],["BoxedSqlQuery","See `SqlQuery::into_boxed`."],["DebugQuery","A struct that implements `fmt::Display` and `fmt::Debug` to show the SQL representation of a query."],["DeleteStatement","Represents a SQL `DELETE` statement."],["IncompleteInsertStatement","The structure returned by `insert_into`."],["InsertStatement","A fully constructed insert statement."],["SqlQuery","The return value of `sql_query`."],["UpdateStatement","Represents a complete `UPDATE` statement."]],"trait":[["AsChangeset","Types which can be passed to `update.set`."],["AsQuery","Types that can be converted into a complete, typed SQL query."],["BindCollector","A type which manages serializing bind parameters during query construction."],["DecoratableTarget","Interface to add information to conflict targets. Designed to be open for further additions to conflict targets like constraints"],["IntoBoxedClause","A trait used to construct type erased boxed variant of the current query node"],["IntoUpdateTarget","A type which can be passed to `update` or `delete`."],["Query","A complete SQL query with a return type."],["QueryBuilder","Constructs a SQL query from a Diesel AST."],["QueryFragment","An untyped fragment of SQL."],["QueryId","Uniquely identifies queries by their type for the purpose of prepared statement caching."],["SelectQuery","Indicates that a type is a `SELECT` statement."]],"type":[["BoxedDeleteStatement","A `DELETE` statement with a boxed `WHERE` clause"],["BoxedUpdateStatement","An `UPDATE` statement with a boxed `WHERE` clause."],["BuildQueryResult","A specialized Result type used with the query builder."],["IncompleteInsertOrIgnoreStatement","Represents the return type of `diesel::insert_or_ignore_into`"],["IncompleteReplaceStatement","Represents the return type of `diesel::replace_into`"],["InsertOrIgnoreStatement","Represents a complete `INSERT OR IGNORE` statement."],["ReplaceStatement","Represents a complete `INSERT OR REPLACE` statement."]]};